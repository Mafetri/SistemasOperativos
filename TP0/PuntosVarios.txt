======================================================
               TRABAJO PRACTICO N0
======================================================
1)
	int a; (Enteros)
	char a; (Caracteres, alamcena ints)
	long a; (entero largo)
	float a; (punto flotante)
	double a; (punto flotante doble precision)
	short a; (entero corto)
	unsigned a; (Sin signo, para char, int, long)

------------------------------------------------------	
2)
------------------------------------------------------
3) 
	Un int en C puede almacenar un word, osea el numero de bits de la arquitectura del
	pc que compile.
	Si la pc es de 8bits, entonces el int puede almacenar 8bits.
	En mi caso, al ser una PC de 64 bits puede almacenar 64bits.
------------------------------------------------------
4)
	Una va a mostrar por pantalla el numero entero del char a, mientras que la otra muestra 	el numero en si
	El valor numerico de a es 77
------------------------------------------------------
5)
	char i; 		i vale 8 bits y representa desde -128 a 127
	unsigned char i; 	i vale 8 bits y representa desde 0 a 255 
------------------------------------------------------
6)
------------------------------------------------------
7)
	integer a, no existe integer, deberia usarse int
	long float,
	unsigned float,
	char 2j, no se pude usar un numero como primer caracter de nombre de variable
	float ancho, alto, long: no se puede usar la palabra long
	bool i: no existe
------------------------------------------------------
8)
	Hay algo raro, en mi PC de 64 bits, el int vale 4 bytes (32bits) segun el sizeof(int).									!!!!!
------------------------------------------------------ 
9)
	Hay algo raro, el unsiged char en vez de ser de 1 byte es de 4 bytes, mientras que char solo es de 1 byte						!!!!!
------------------------------------------------------ 
10)
	a)
		En C, la / devuelve el tipo de uno o ambos de los involucrados, en este caso como a y b son ints, entonces
		a/b va a dar un int, tomando el cociente y desechando el resto. Por lo tanto r=5/2 => r=2. Para corregirlo
		hay que hacer que uno de los dos o ambos (a, b) sean float.
	
	b)	
		Va a dar seguramente error porque como a y b son ints, al dividirlos va a dar 0, cociente(a,b) = 0, a = 1, b = 2.
		Entonces c es 0, por lo tanto a/c = 1/0 lo cual es imposible
	
	c)
		printf("%d\n", 20/3); = 6 porque 20 es entero y 3 es entero por lo tanto hace un DIV
    		printf("%f\n", 20/3); da 0 pero no se porqu√©.													!!!!!
   		printf("%f\n", 20/3.); = 6.666 periodico porque el 3 es flotante, y entero/flotante = flotante
  		printf("%d\n", 10%3); deberia dar 3 pero da 1
  		printf("%d\n", 3.1416); Da raro porque el 3.14 es float, y al pasarlo a double su representacion es distitna
  		printf("%f\n", (double)20/3); = 6.66667 ya que pasar de double a float no genera problema
 		printf("%f\n", (int)3.1416); 3.1416 a int queda 3, pero al mostrar 3 como float, se imprime 6.666667
 		printf("%d\n", (int)3.1416); = 3, misma razon que arriba pero int a double queda igual
------------------------------------------------------ 
11)
	Hubo overflow y el numero maximo alcanzado es de 1410065400
------------------------------------------------------ 

	
	
	
	
	
	
	
	
	
	
	
	
	
		

